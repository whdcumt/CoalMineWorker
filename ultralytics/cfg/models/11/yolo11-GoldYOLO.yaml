# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 319 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10

# YOLO11n head
head:
  - [[2, 4, 6, -1], 1, Low_FAM, []]
  - [-1, 1, Low_IFM, [96, 3, 768]]
  - [-1, 1, Split, [512, 256]] # 13-low_global_info

  - [10, 1, SimConv, [512, 1, 1]] # 14-c5_half
  - [[4, 6, -1], 1, Low_LAF, [512]]
  - [[-1, 13], 1, Inject, [512, 0]]
  - [-1, 1, RepBlock, [512, 12]] # 17-p4
  - [-1, 1, SimConv, [256, 1, 1]] # 18-p4_half

  - [[2, 4, -1], 1, Low_LAF, [256]]
  - [[-1, 13], 1, Inject, [256, 1]]
  - [-1, 1, RepBlock, [256, 12]] # 21-p3

  - [[-1, 17, 10], 1, High_FAM, [1, 'torch']]
  - [-1, 1, High_IFM, [2, 1792, 8, 4, 1, 2, 0, 0, [0.1, 2]]]
  - [-1, 1, nn.Conv2d, [1536, 1, 1, 0]]
  - [-1, 1, Split, [512, 1024]] # 25-high_global_info

  - [[21, 18], 1, High_LAF, []]
  - [[-1, 25], 1, Inject, [512, 0]]
  - [-1, 1, RepBlock, [512, 12]] # 28-n4

  - [[-1, 14], 1, High_LAF, []]
  - [[-1, 25], 1, Inject, [1024, 1]]
  - [-1, 1, RepBlock, [1024, 12]] # 31-n5

  - [[21, 28, 31], 1, Detect, [nc]]  # Detect(P3, N4, N5)
